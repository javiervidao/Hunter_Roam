esphome:
  name: hunter-roam-esp32
  friendly_name: Hunter Roam

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

external_components:
  - source:
      type: git
      url: http://github.com/javiervidao/Hunter_Roam
    components: [hunter_roam]

logger:

api:

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "Hunter Roam Fallback Hotspot"
    password: "12345678"

captive_portal:

web_server:

number:
  - platform: template
    name: "Zona"
    id: hunter_zone
    optimistic: true
    min_value: 1
    max_value: 8
    initial_value: 1
    step: 1

  - platform: template
    name: "Programa"
    id: hunter_program
    optimistic: true
    min_value: 1
    max_value: 8
    initial_value: 1
    step: 1

  - platform: template
    name: "Tiempo"
    id: hunter_time
    optimistic: true
    min_value: 1
    max_value: 60
    initial_value: 10
    step: 1

hunter_roam:
    id: hunter_roam_component
    pin: GPIO4

button:
  - platform: restart
    name: "Hunter Roam Restart"

  - platform: template
    name: "Start Zone"
    id: start_zone
    on_press:
      - lambda: |-
          if (id(hunter_roam_component).startZone(int(id(hunter_zone).state), int(id(hunter_time).state)) != 0) {
            ESP_LOGE("HunterRoam", "Failed to start zone %d", int(id(hunter_zone).state));
          } else {
            ESP_LOGI("HunterRoam", "Zone %d started for %d minutes", int(id(hunter_zone).state), int(id(hunter_time).state));
          }

  - platform: template
    name: "Stop Zone"
    id: stop_zone
    on_press:
      - lambda: |-
          if (id(hunter_roam_component).stopZone(int(id(hunter_zone).state)) != 0) {
            ESP_LOGE("HunterRoam", "Failed to stop zone %d", int(id(hunter_zone).state));
          } else {
            ESP_LOGI("HunterRoam", "Zone %d stopped", int(id(hunter_zone).state));
          }

  - platform: template
    name: "Run Program"
    id: run_program
    on_press:
      - lambda: |-
          if (id(hunter_roam_component).startProgram(int(id(hunter_program).state)) != 0) {
            ESP_LOGE("HunterRoam", "Failed to start program %d", int(id(hunter_program).state));
          } else {
            ESP_LOGI("HunterRoam", "Program %d started",int(id(hunter_program).state));
          }
